{"version":3,"sources":["./src/app/deleteactor/deleteactor.component.ts","./src/app/deleteactor/deleteactor.component.html","./src/app/actortomovie/actortomovie.component.ts","./src/app/actortomovie/actortomovie.component.html","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/listactors/listactors.component.ts","./src/app/listactors/listactors.component.html","./src/app/addmovie/addmovie.component.ts","./src/app/addmovie/addmovie.component.html","./src/app/updateactor/updateactor.component.ts","./src/app/updateactor/updateactor.component.html","./src/app/addactor/addactor.component.ts","./src/app/addactor/addactor.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/app/deletemovie/deletemovie.component.ts","./src/app/deletemovie/deletemovie.component.html","./src/app/listmovies/listmovies.component.ts","./src/app/listmovies/listmovies.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-deleteactor\",\n  templateUrl: \"./deleteactor.component.html\",\n  styleUrls: [\"./deleteactor.component.css\"],\n})\nexport class DeleteactorComponent implements OnInit {\n  actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteActor(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-actortomovie',\n  templateUrl: './actortomovie.component.html',\n  styleUrls: ['./actortomovie.component.css']\n})\nexport class ActortomovieComponent implements OnInit {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  actorsDB: any[] = [];\n  fullTitle: string = \"\";\n  year: number = 0;\n  movieId: string = \"\";\n  moviesDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) { }\n\n  //Get all Actors\nonGetActors() {\n  console.log(\"From on GetActors\");\n  return this.dbService.getActors().subscribe((data: any[]) => {\n    this.actorsDB = data;\n  });\n}\nonGetMovies() {\n  this.dbService.getMovies().subscribe((data1: any[]) => {\n    this.moviesDB = data1;\n  });\n}\n// Update an Actor\nonSelectUpdate(item) { \n  this.fullName = item.name;\n  this.bYear = item.bYear;\n  this.actorId = item._id;\n}\nonSelectMovie(item) {\n  this.fullTitle = item.title;\n  this.year = item.year;\n  this.movieId = item._id;\n}\nonAddAtoM() {\n  let obj = {id: this.actorId};\n  this.dbService.updateMovie(this.movieId, obj).subscribe(result => {\n    this.onGetActors();\n  });\n}\n\nngOnInit() {\n  this.onGetActors();\n  this.onGetMovies();\n}\n\n}\n","<div>\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Actor Name</th>\n        <th>Birth Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Select</button></td>\n      </tr>\n    </table>\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Movie Title</th>\n        <th>Release Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item1 of moviesDB\">\n        <td>{{item1.title}}</td>\n        <td>{{item1.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectMovie(item1)\">Select</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"actorsDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"actorName\">Full Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Movie Title</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullTitle\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"year\">\n      </div>\n      \n\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onAddAtoM()\">Add Actor to Movie</button>\n    </div>\n\n\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<H1>View Not Found!!!!</H1>\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n@Component({\n  selector: \"app-listactors\",\n  templateUrl: \"./listactors.component.html\",\n  styleUrls: [\"./listactors.component.css\"],\n})\nexport class ListactorsComponent implements OnInit {\n  actorsDB: any[] = [];\n\n\n  constructor(private dbService: DatabaseService) {}\n  ngOnInit() {\n    console.log(\"Hi From ListActors ngIOnit\");\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-addmovie',\n  templateUrl: './addmovie.component.html',\n  styleUrls: ['./addmovie.component.css']\n})\nexport class AddmovieComponent{ \n  title: string = \"\";\n  year: number = 0;\n  movieId: string = \"\";\n\n  constructor(private dbService: DatabaseService, private router: Router) { }\n  onSaveMovie() {\n    let obj = { title: this.title, year: this.year };\n    this.dbService.createMovie(obj).subscribe(result => {\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n}\n","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Movie Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"movieTitle\" [(ngModel)]=\"title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Release Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"movieTitle\" [(ngModel)]=\"year\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveMovie()\">Save Movie</button>\n  </div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-updateactor\",\n  templateUrl: \"./updateactor.component.html\",\n  styleUrls: [\"./updateactor.component.css\"],\n})\nexport class UpdateactorComponent implements OnInit {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  actorsDB: any[] = [];\n  \n  constructor(private dbService: DatabaseService, private router: Router) {}\n  \n  \n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) { \n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"actorsDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"actorName\">Full Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">Update Actor</button>\n    </div>\n  </div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-addactor\",\n  templateUrl: \"./addactor.component.html\",\n  styleUrls: [\"./addactor.component.css\"],\n})\n\n\nexport class AddactorComponent {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n}","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n  </div>\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'movieAng';\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/listactors\" routerLinkActive=\"active\">List </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/addactor\" routerLinkActive=\"active\">Add </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/updateactor\" routerLinkActive=\"active\">Update</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/deleteactor\" routerLinkActive=\"active\">Delete</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/addmovie\" routerLinkActive=\"active\">Add Movie </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/deletemovie\" routerLinkActive=\"active\">Delete Movie </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/listmovies\" routerLinkActive=\"active\">Movie List</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/actortomovie\" routerLinkActive=\"active\">Add Actor to Movie</a>\n        </li>\n    </ul>\n</nav>\n<router-outlet></router-outlet>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"./app.component\";\nimport { DatabaseService } from \"./database.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ListactorsComponent } from \"./listactors/listactors.component\";\nimport { AddactorComponent } from \"./addactor/addactor.component\";\nimport { DeleteactorComponent } from \"./deleteactor/deleteactor.component\";\nimport { UpdateactorComponent } from \"./updateactor/updateactor.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AddmovieComponent } from './addmovie/addmovie.component';\nimport { DeletemovieComponent } from './deletemovie/deletemovie.component';\nimport { ListmoviesComponent } from './listmovies/listmovies.component';\nimport { ActortomovieComponent } from './actortomovie/actortomovie.component';\nimport { ErrorComponent } from './error/error.component';\n\n\nconst appRoutes: Routes = [\n  { path: \"listactors\", component: ListactorsComponent },\n  { path: \"addactor\", component: AddactorComponent },\n  { path: \"updateactor\", component: UpdateactorComponent },\n  { path: \"deleteactor\", component: DeleteactorComponent },\n  { path: \"deletemovie\", component: DeletemovieComponent },\n  { path: \"addmovie\", component: AddmovieComponent},\n  { path: \"listmovies\", component: ListmoviesComponent },\n  { path: \"actortomovie\", component: ActortomovieComponent },\n  { path: \"error\", component: ErrorComponent },\n  { path: \"\", redirectTo: \"/listactors\", pathMatch: \"full\" },\n  { path: \"**\", redirectTo: \"/error\" },\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListactorsComponent,\n    AddactorComponent,\n    UpdateactorComponent,\n    DeleteactorComponent,\n    AddmovieComponent,\n    DeletemovieComponent,\n    ListmoviesComponent,\n    ActortomovieComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes,{useHash: true}),\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n};\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n  getActors() {\n    return this.http.get(\"/actors\");\n  }\n  getActor(id: string) {\n    let url = \"/actors/\" + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    return this.http.post(\"/actors\", data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = \"/actors/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = \"/actors/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  createMovie(data) {\n    return this.http.post(\"/movies\", data, httpOptions);\n  }\n  getMovies() {\n    return this.http.get(\"/movies\");\n  }\n  deleteMovie(id) {\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  updateMovie(id, data) {\n    let url = \"/movies/\" + id + \"/actors/\";\n    return this.http.post(url, data, httpOptions);\n  }\n \n}","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-deletemovie',\n  templateUrl: './deletemovie.component.html',\n  styleUrls: ['./deletemovie.component.css']\n}) \nexport class DeletemovieComponent implements OnInit {\n  moviesDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) { }\n//Get all Actors\nonGetMovies() {\n  console.log(\"From on GetActors\");\n  return this.dbService.getMovies().subscribe((data: any[]) => {\n    this.moviesDB = data;\n  });\n}\n//Delete Actor\nonDeleteMovie(item) {\n  this.dbService.deleteMovie(item._id).subscribe(result => {\n    this.onGetMovies();\n    this.router.navigate([\"/deletemovie\"]);\n  });\n}\n// This callback function will be invoked with the component get initialized by Angular.\nngOnInit() {\n  this.onGetMovies();\n}\n}\n","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Movie Title</th>\n        <th>Release Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteMovie(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: 'app-listmovies',\n  templateUrl: './listmovies.component.html',\n  styleUrls: ['./listmovies.component.css']\n})\nexport class ListmoviesComponent implements OnInit {\n  moviesDB: any[] = [];\n\n  constructor(private dbService: DatabaseService) {}\n  ngOnInit() {\n    console.log(\"Hi From ListMovies ngIOnit\");\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n}\n","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Movie Title</th>\n        <th>Release Year</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n      </tr>\n    </table>\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}